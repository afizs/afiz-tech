{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"YouTube Videos Python Projects","title":"Home"},{"location":"about/","text":"Unordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci programming Examples python 1 print ( 'hello world' ) C 1 2 3 4 5 6 #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ 1 2 3 4 5 6 #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"About"},{"location":"about/#programming-examples","text":"python 1 print ( 'hello world' ) C 1 2 3 4 5 6 #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ 1 2 3 4 5 6 #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"programming Examples"},{"location":"projects/","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # School Management System students = { 'ID1' : { 'name' : 'John' , 'dob' : '01-01-2010' , 'class' : '5' }, 'ID2' : { 'name' : 'Sarah' , 'dob' : '09-01-2010' , 'class' : '5' }, 'ID3' : { 'name' : 'Frank' , 'dob' : '09-01-2011' , 'class' : '6' } } print ( '-----' * 8 ) print ( ' \\t School Management System' ) print ( '-----' * 8 ) choice = int ( input ( '1. Total Number of Students \\n 2. Display Student details \\n 3. Add new student \\n 4. Exit \\n Choose Your option = ' )) if choice == 1 : print ( f 'Total Students: { len ( students ) } ' ) elif choice == 2 : pass elif choice == 3 : pass else : pass","title":"Projects"},{"location":"exercises/dictionary/","text":"1. Convert two lists into dictionary Input : 1 2 keys = [ 'name' , 'age' , 'contact' ] values = [ 'Afiz' , 30 , '9090909090' ] Output : 1 { 'name' : 'Afiz' , 'age' : 30 , 'contact' : '9090909090' } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 keys = [ 'name' , 'age' , 'contact' ] values = [ 'Afiz' , 30 , '9090909090' ] # output: {'name': 'Afiz', 'age': 30, 'contact': '9090909090'} print ( dict ( zip ( keys , values ))) my_dictionary = {} for i in range ( len ( keys )): my_dictionary [ keys [ i ]] = values [ i ] print ( my_dictionary ) YouTube 2. Merge two dictionaries into one in Python input : 1 2 3 4 5 6 7 8 9 10 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } dict_b = { \"veg\" : True , \"quantity\" : 1 } output : 1 2 3 4 5 6 7 { \"id\": 10, \"name\": \"Softdrinks\", \"price\": 30, \"veg\": True, \"quantity\": 1 } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } dict_b = { \"veg\" : True , \"quantity\" : 1 } # solution 1 dict_c = { ** dict_a , ** dict_b } print ( dict_c ) # solution 2 dict_a . update ( dict_b ) print ( dict_a ) 3. Create dictionary with default values input : 1 2 items = [ 'Lemon rice' , 'Paneer Masala' , 'Parota' ] defaults = { \"veg\" : True , \"quantity\" : 1 } output : 1 2 3 4 5 { 'Lemon rice' : { \"veg\" : True , \"quantity\" : 1 }, 'Paneer Masala' : { \"veg\" : True , \"quantity\" : 1 }, 'Parota' : { \"veg\" : True , \"quantity\" : 1 } } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 items = [ 'Lemon rice' , 'Paneer Masala' , 'Parota' ] defaults = { \"veg\" : True , \"quantity\" : 1 } # output: {'Lemon rice': {\"veg\": True,\"quantity\": 1 }, # 'Paneer Masala': {\"veg\": True,\"quantity\": 1 }, # 'Parota': {\"veg\": True,\"quantity\": 1 }} my_dict = {} for item in items : my_dict [ item ] = defaults print ( my_dict ) # solution 2 my_dict_2 = dict . fromkeys ( items , defaults ) print ( my_dict_2 ) 4. Create a new small dictionary from big dictionary input : 1 2 3 4 5 6 7 8 9 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys = [ 'id' , 'name' ] output : 1 { id : 10 , name : softdrinks } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Create a new small dictionary from big dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys = [ 'id' , 'name' ] # {id: 10, name: softdrinks} new_dict = {} for key in keys : new_dict [ key ] = dict_a [ key ] print ( new_dict ) # solution 2 new_dict = { key : dict_a [ key ] for key in keys } print ( new_dict ) 5. Delete set of keys from a dictionary input : 1 2 3 4 5 6 7 8 9 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys_to_remove = [ 'veg' , 'quantity' ] output : 1 2 3 4 5 { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Delete set of keys from a dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys_to_remove = [ 'veg' , 'quantity' ] total_keys = dict_a . keys () my_dict = { key : dict_a [ key ] for key in total_keys - keys_to_remove } print ( my_dict ) # solution 2 for key in keys_to_remove : dict_a . pop ( key ) print ( dict_a ) 6. Rename a key in the dictionary input : 1 2 3 4 5 6 7 8 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } # rename the \"veg\" key to \"new_veg\" output: 1 2 3 4 5 6 7 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"new_veg\" : True , \"quantity\" : 1 } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 # Rename the key in the dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } dict_a [ 'new_veg' ] = dict_a . pop ( 'veg' ) print ( dict_a ) 7. Get the key of a max value from a dictionary input : 1 2 3 4 5 6 scores = { \"rohit\" : 76 , 'rahul' : 45 , 'kohli' : 43 , 'Jadeja' : 89 } output : kohli Source Code: 1 2 3 4 5 6 7 8 9 10 # Get the key of a minimum value from a dictionary scores = { \"rohit\" : 76 , 'rahul' : 45 , 'kohli' : 43 , 'Jadeja' : 89 } # output: Kohli print ( max ( scores , key = scores . get ))","title":"Dictionary"},{"location":"exercises/dictionary/#1-convert-two-lists-into-dictionary","text":"Input : 1 2 keys = [ 'name' , 'age' , 'contact' ] values = [ 'Afiz' , 30 , '9090909090' ] Output : 1 { 'name' : 'Afiz' , 'age' : 30 , 'contact' : '9090909090' } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 keys = [ 'name' , 'age' , 'contact' ] values = [ 'Afiz' , 30 , '9090909090' ] # output: {'name': 'Afiz', 'age': 30, 'contact': '9090909090'} print ( dict ( zip ( keys , values ))) my_dictionary = {} for i in range ( len ( keys )): my_dictionary [ keys [ i ]] = values [ i ] print ( my_dictionary ) YouTube","title":"1. Convert two lists into dictionary"},{"location":"exercises/dictionary/#2-merge-two-dictionaries-into-one-in-python","text":"input : 1 2 3 4 5 6 7 8 9 10 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } dict_b = { \"veg\" : True , \"quantity\" : 1 } output : 1 2 3 4 5 6 7 { \"id\": 10, \"name\": \"Softdrinks\", \"price\": 30, \"veg\": True, \"quantity\": 1 } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } dict_b = { \"veg\" : True , \"quantity\" : 1 } # solution 1 dict_c = { ** dict_a , ** dict_b } print ( dict_c ) # solution 2 dict_a . update ( dict_b ) print ( dict_a )","title":"2. Merge two dictionaries into one in Python"},{"location":"exercises/dictionary/#3-create-dictionary-with-default-values","text":"input : 1 2 items = [ 'Lemon rice' , 'Paneer Masala' , 'Parota' ] defaults = { \"veg\" : True , \"quantity\" : 1 } output : 1 2 3 4 5 { 'Lemon rice' : { \"veg\" : True , \"quantity\" : 1 }, 'Paneer Masala' : { \"veg\" : True , \"quantity\" : 1 }, 'Parota' : { \"veg\" : True , \"quantity\" : 1 } } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 items = [ 'Lemon rice' , 'Paneer Masala' , 'Parota' ] defaults = { \"veg\" : True , \"quantity\" : 1 } # output: {'Lemon rice': {\"veg\": True,\"quantity\": 1 }, # 'Paneer Masala': {\"veg\": True,\"quantity\": 1 }, # 'Parota': {\"veg\": True,\"quantity\": 1 }} my_dict = {} for item in items : my_dict [ item ] = defaults print ( my_dict ) # solution 2 my_dict_2 = dict . fromkeys ( items , defaults ) print ( my_dict_2 )","title":"3. Create dictionary with default values"},{"location":"exercises/dictionary/#4-create-a-new-small-dictionary-from-big-dictionary","text":"input : 1 2 3 4 5 6 7 8 9 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys = [ 'id' , 'name' ] output : 1 { id : 10 , name : softdrinks } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Create a new small dictionary from big dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys = [ 'id' , 'name' ] # {id: 10, name: softdrinks} new_dict = {} for key in keys : new_dict [ key ] = dict_a [ key ] print ( new_dict ) # solution 2 new_dict = { key : dict_a [ key ] for key in keys } print ( new_dict )","title":"4. Create a new small dictionary from big dictionary"},{"location":"exercises/dictionary/#5-delete-set-of-keys-from-a-dictionary","text":"input : 1 2 3 4 5 6 7 8 9 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys_to_remove = [ 'veg' , 'quantity' ] output : 1 2 3 4 5 { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Delete set of keys from a dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } keys_to_remove = [ 'veg' , 'quantity' ] total_keys = dict_a . keys () my_dict = { key : dict_a [ key ] for key in total_keys - keys_to_remove } print ( my_dict ) # solution 2 for key in keys_to_remove : dict_a . pop ( key ) print ( dict_a )","title":"5. Delete set of keys from a dictionary"},{"location":"exercises/dictionary/#6-rename-a-key-in-the-dictionary","text":"input : 1 2 3 4 5 6 7 8 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } # rename the \"veg\" key to \"new_veg\" output: 1 2 3 4 5 6 7 dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"new_veg\" : True , \"quantity\" : 1 } Source Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 # Rename the key in the dictionary dict_a = { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : True , \"quantity\" : 1 } dict_a [ 'new_veg' ] = dict_a . pop ( 'veg' ) print ( dict_a )","title":"6. Rename a key in the dictionary"},{"location":"exercises/dictionary/#7-get-the-key-of-a-max-value-from-a-dictionary","text":"input : 1 2 3 4 5 6 scores = { \"rohit\" : 76 , 'rahul' : 45 , 'kohli' : 43 , 'Jadeja' : 89 } output : kohli Source Code: 1 2 3 4 5 6 7 8 9 10 # Get the key of a minimum value from a dictionary scores = { \"rohit\" : 76 , 'rahul' : 45 , 'kohli' : 43 , 'Jadeja' : 89 } # output: Kohli print ( max ( scores , key = scores . get ))","title":"7. Get the key of a max value from a dictionary"},{"location":"exercises/home/","text":"Python Dictionary Exercises","title":"Python Execrcises Home"},{"location":"projects/password/","text":"Source Code: 1 2 3 4 5 import random pass_len = int ( input ( 'enter the length: ' )) s = \"abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?\" password = '' . join ( random . sample ( s , pass_len )) print ( password )","title":"Random Password Generator"},{"location":"projects/rms/","text":"Source Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 import json def get_rating ( reviews ): rating = 5 if reviews : # [3,4,5,1,4,5] rating = sum ( reviews ) // len ( reviews ) return '\u2b50\ufe0f' * rating with open ( 'menu.json' , 'r' ) as f : data = json . load ( f ) items = data . get ( 'items' , []) while True : print ( '-' * 40 ) print ( 'Super Famous Restaurant' ) print ( '-' * 40 ) print ( '1. Show Menu' ) print ( '2. Order Items' ) print ( '3. Add Item' ) print ( '4. Add Rating' ) print ( '5. Exit' ) print ( '-' * 40 ) choice = int ( input ()) if choice == 1 : print ( '-' * 40 ) print ( 'ID \\t Name \\t\\t Price \\t Rating' ) print ( '-' * 40 ) for item in items : print ( f ' { item . get ( \"id\" ) } \\t { item . get ( \"name\" ) } \\t { item . get ( \"price\" ) } \\t { get_rating ( item . get ( \"reviews\" , [])) } ' ) print ( '-' * 40 ) elif choice == 2 : ordered_items = {} order_items = list ( map ( int , input ( 'What you want to try today? ' ) . split ( ',' ))) print ( '-' * 40 ) print ( 'ID \\t Name \\t\\t Price \\t Quantity \\t Amount' ) print ( '-' * 40 ) total_bill = 0 for order_item in order_items : for item in items : if item [ 'id' ] == order_item : if order_item in ordered_items : ordered_items [ order_item ][ 'quantity' ] += 1 else : ordered_items [ order_item ] = item ordered_items [ order_item ][ 'quantity' ] = 1 break for item in ordered_items : name = ordered_items [ item ][ 'name' ] price = ordered_items [ item ][ 'price' ] quantity = ordered_items [ item ][ 'quantity' ] amount = price * quantity print ( f ' { item } \\t { name } \\t { price } \\t { quantity } \\t\\t { amount } ' ) total_bill += amount print ( '-' * 40 ) print ( f ' \\t Total Amount: { total_bill } ' ) print ( '-' * 40 ) elif choice == 3 : name = input ( 'Enter item name: ' ) item_price = int ( input ( 'Enter the price: ' )) item_type = input ( 'veg or non-veg' ) items . append ({ 'id' : len ( items ) + 1 , 'name' : name , 'price' : item_price , 'veg' : True if item_type == 'veg' else False , 'reviews' : [] }) data [ 'items' ] = items with open ( 'menu.json' , 'w' ) as f : json . dump ( data , f ) print ( 'Item is added.' ) elif choice == 4 : item_id = int ( input ( 'Enter the item id: ' )) rating = int ( input ( 'Give your rating 1-5: ' )) for i , item in enumerate ( items ): if item [ 'id' ] == item_id : items [ i ][ 'reviews' ] . append ( rating ) break print ( 'Thank you. Your rating is recorded.' ) else : data [ 'items' ] = items with open ( 'menu.json' , 'w' ) as f : json . dump ( data , f ) print ( 'Thank you' ) break sample data menu.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 { \"items\" : [ { \"id\" : 1 , \"name\" : \"Chicken Biryani\" , \"price\" : 200 , \"veg\" : false , \"reviews\" : [ 4 , 1 , 4 ], \"quantity\" : 1 }, { \"id\" : 2 , \"name\" : \"Chicken Kabab\" , \"price\" : 150 , \"veg\" : false , \"reviews\" : [], \"quantity\" : 2 }, { \"id\" : 3 , \"name\" : \"Paneer Biryani\" , \"price\" : 180 , \"veg\" : true , \"reviews\" : [ 4 ], \"quantity\" : 2 }, { \"id\" : 4 , \"name\" : \"Veg Platter\" , \"price\" : 150 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 5 , \"name\" : \"Ice Creame\" , \"price\" : 100 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 6 , \"name\" : \"Sweet Lassi\" , \"price\" : 80 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 7 , \"name\" : \"Gulab Jamoon\" , \"price\" : 120 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 8 , \"name\" : \"Mutton Biryani\" , \"price\" : 220 , \"veg\" : false , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 9 , \"name\" : \"Veg Pulav\" , \"price\" : 120 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : true , \"reviews\" : [ 1 ], \"quantity\" : 1 }, { \"id\" : 11 , \"name\" : \"Friut Salad\" , \"price\" : 50 , \"veg\" : true , \"reviews\" : [] } ] }","title":"Restaurant Management System"},{"location":"projects/rms/#source-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 import json def get_rating ( reviews ): rating = 5 if reviews : # [3,4,5,1,4,5] rating = sum ( reviews ) // len ( reviews ) return '\u2b50\ufe0f' * rating with open ( 'menu.json' , 'r' ) as f : data = json . load ( f ) items = data . get ( 'items' , []) while True : print ( '-' * 40 ) print ( 'Super Famous Restaurant' ) print ( '-' * 40 ) print ( '1. Show Menu' ) print ( '2. Order Items' ) print ( '3. Add Item' ) print ( '4. Add Rating' ) print ( '5. Exit' ) print ( '-' * 40 ) choice = int ( input ()) if choice == 1 : print ( '-' * 40 ) print ( 'ID \\t Name \\t\\t Price \\t Rating' ) print ( '-' * 40 ) for item in items : print ( f ' { item . get ( \"id\" ) } \\t { item . get ( \"name\" ) } \\t { item . get ( \"price\" ) } \\t { get_rating ( item . get ( \"reviews\" , [])) } ' ) print ( '-' * 40 ) elif choice == 2 : ordered_items = {} order_items = list ( map ( int , input ( 'What you want to try today? ' ) . split ( ',' ))) print ( '-' * 40 ) print ( 'ID \\t Name \\t\\t Price \\t Quantity \\t Amount' ) print ( '-' * 40 ) total_bill = 0 for order_item in order_items : for item in items : if item [ 'id' ] == order_item : if order_item in ordered_items : ordered_items [ order_item ][ 'quantity' ] += 1 else : ordered_items [ order_item ] = item ordered_items [ order_item ][ 'quantity' ] = 1 break for item in ordered_items : name = ordered_items [ item ][ 'name' ] price = ordered_items [ item ][ 'price' ] quantity = ordered_items [ item ][ 'quantity' ] amount = price * quantity print ( f ' { item } \\t { name } \\t { price } \\t { quantity } \\t\\t { amount } ' ) total_bill += amount print ( '-' * 40 ) print ( f ' \\t Total Amount: { total_bill } ' ) print ( '-' * 40 ) elif choice == 3 : name = input ( 'Enter item name: ' ) item_price = int ( input ( 'Enter the price: ' )) item_type = input ( 'veg or non-veg' ) items . append ({ 'id' : len ( items ) + 1 , 'name' : name , 'price' : item_price , 'veg' : True if item_type == 'veg' else False , 'reviews' : [] }) data [ 'items' ] = items with open ( 'menu.json' , 'w' ) as f : json . dump ( data , f ) print ( 'Item is added.' ) elif choice == 4 : item_id = int ( input ( 'Enter the item id: ' )) rating = int ( input ( 'Give your rating 1-5: ' )) for i , item in enumerate ( items ): if item [ 'id' ] == item_id : items [ i ][ 'reviews' ] . append ( rating ) break print ( 'Thank you. Your rating is recorded.' ) else : data [ 'items' ] = items with open ( 'menu.json' , 'w' ) as f : json . dump ( data , f ) print ( 'Thank you' ) break","title":"Source Code"},{"location":"projects/rms/#sample-data-menujson","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 { \"items\" : [ { \"id\" : 1 , \"name\" : \"Chicken Biryani\" , \"price\" : 200 , \"veg\" : false , \"reviews\" : [ 4 , 1 , 4 ], \"quantity\" : 1 }, { \"id\" : 2 , \"name\" : \"Chicken Kabab\" , \"price\" : 150 , \"veg\" : false , \"reviews\" : [], \"quantity\" : 2 }, { \"id\" : 3 , \"name\" : \"Paneer Biryani\" , \"price\" : 180 , \"veg\" : true , \"reviews\" : [ 4 ], \"quantity\" : 2 }, { \"id\" : 4 , \"name\" : \"Veg Platter\" , \"price\" : 150 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 5 , \"name\" : \"Ice Creame\" , \"price\" : 100 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 6 , \"name\" : \"Sweet Lassi\" , \"price\" : 80 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 7 , \"name\" : \"Gulab Jamoon\" , \"price\" : 120 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 8 , \"name\" : \"Mutton Biryani\" , \"price\" : 220 , \"veg\" : false , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 9 , \"name\" : \"Veg Pulav\" , \"price\" : 120 , \"veg\" : true , \"reviews\" : [], \"quantity\" : 1 }, { \"id\" : 10 , \"name\" : \"Softdrinks\" , \"price\" : 30 , \"veg\" : true , \"reviews\" : [ 1 ], \"quantity\" : 1 }, { \"id\" : 11 , \"name\" : \"Friut Salad\" , \"price\" : 50 , \"veg\" : true , \"reviews\" : [] } ] }","title":"sample data menu.json"},{"location":"projects/simplepyprojects/","text":"1. Dice Roll Simulator 1 2 3 4 5 6 7 8 9 10 11 # Dice roll simulator import random while True : print ( '1. Roll the dice \\n 2. Exit' ) choice = int ( input ()) if choice == 1 : num = random . randint ( 1 , 6 ) print ( f 'Random number: { num } ' ) else : break 2. Guess the number game in Python 1 2 3 4 5 6 7 8 9 10 11 12 13 # Guess the number game import random number = random . randint ( 1 , 10 ) for i in range ( 1 , 4 ): user = int ( input ( 'Guess the number: ' )) if user == number : print ( 'Great!! You gusssed the number right' ) break else : print ( 'sorry!! Incorrect guess' ) print ( 'Correct number is: ' , number )","title":"Python Projects for Beginners"},{"location":"projects/simplepyprojects/#1-dice-roll-simulator","text":"1 2 3 4 5 6 7 8 9 10 11 # Dice roll simulator import random while True : print ( '1. Roll the dice \\n 2. Exit' ) choice = int ( input ()) if choice == 1 : num = random . randint ( 1 , 6 ) print ( f 'Random number: { num } ' ) else : break","title":"1. Dice Roll Simulator"},{"location":"projects/simplepyprojects/#2-guess-the-number-game-in-python","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 # Guess the number game import random number = random . randint ( 1 , 10 ) for i in range ( 1 , 4 ): user = int ( input ( 'Guess the number: ' )) if user == number : print ( 'Great!! You gusssed the number right' ) break else : print ( 'sorry!! Incorrect guess' ) print ( 'Correct number is: ' , number )","title":"2. Guess the number game in Python"},{"location":"projects/sms/","text":"Development in progress 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # School Management System students = { 'ID1' : { 'name' : 'John' , 'dob' : '01-01-2010' , 'class' : '5' }, 'ID2' : { 'name' : 'Sarah' , 'dob' : '09-01-2010' , 'class' : '5' }, 'ID3' : { 'name' : 'Frank' , 'dob' : '09-01-2011' , 'class' : '6' } } print ( '-----' * 8 ) print ( ' \\t School Management System' ) print ( '-----' * 8 ) choice = int ( input ( '1. Total Number of Students \\n 2. Display Student details \\n 3. Add new student \\n 4. Exit \\n Choose Your option = ' )) if choice == 1 : print ( f 'Total Students: { len ( students ) } ' ) elif choice == 2 : pass elif choice == 3 : pass else : pass","title":"School Management System"},{"location":"projects/sms/#development-in-progress","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # School Management System students = { 'ID1' : { 'name' : 'John' , 'dob' : '01-01-2010' , 'class' : '5' }, 'ID2' : { 'name' : 'Sarah' , 'dob' : '09-01-2010' , 'class' : '5' }, 'ID3' : { 'name' : 'Frank' , 'dob' : '09-01-2011' , 'class' : '6' } } print ( '-----' * 8 ) print ( ' \\t School Management System' ) print ( '-----' * 8 ) choice = int ( input ( '1. Total Number of Students \\n 2. Display Student details \\n 3. Add new student \\n 4. Exit \\n Choose Your option = ' )) if choice == 1 : print ( f 'Total Students: { len ( students ) } ' ) elif choice == 2 : pass elif choice == 3 : pass else : pass","title":"Development in progress"},{"location":"projects/url/","text":"Python Module required: 1 2 3 4 import contextlib from urllib.parse import urlencode from urllib.request import urlopen import sys Complete code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import contextlib from urllib.parse import urlencode from urllib.request import urlopen import sys def get_tiny_url ( url ): request_url = 'http://tinyurl.com/api-create.php?' + urlencode ({ 'url' : url }) with contextlib . closing ( urlopen ( request_url )) as response : return response . read () . decode ( 'utf-8' ) if __name__ == '__main__' : url = input ( 'Enter the URL: ' ) print ( 'Short URL: ' , get_tiny_url ( url ))","title":"URL Shortner Proejct"}]}